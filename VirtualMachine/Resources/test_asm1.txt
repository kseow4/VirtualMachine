	.ORIG	X3000
	AND	R0, R0, #0	; INPUT FOR N-BIT ADDERS
	AND	R4, R4, #0	; FIRST BINARY INPUT
	AND	R7, R7, #0	; SECOND BINARY INPUT
	.INT 828
	.INT ?!@#$AS
	.BYT h
	.BYT aa
	.INT f
	.byt aas
TL1	.INT 234
TL2 .BYT 5
TL3 .INT 2
TL4 .BYT o


START1	ST	R1, SAVER1
	ST	R2, SAVER2
	ST	R3, SAVER3
	LD	R2, NEWLINE
L1	LDI	R3, DSR
	BRZP	L1
	LEA	R1, PROMPT1
LOOP1	LDR	R0, R1, #0
	BRZ	INPUT1
L2	LDI	R3, DSR
	BRZP	L2
	STI	R0, DDR
	ADD	R1, R1, #1
	BR	LOOP1
INPUT1	LDI	R3, KBSR
	BRZP	INPUT1
	LDI	R0, KBDR
	ADD	R3, R0, #-10
	BRZ	L4
L3	LDI	R3, DSR
	BRZP	L3
	STI	R0, DDR
	BR	INPUT1
L4	LDI	R3, DSR
	BRZP	L4
	STI	R2, DDR
	LD	R1, SAVER1
	LD	R2, SAVER2
	LD	R3, SAVER3

START2	ST	R1, SAVER1
	ST	R2, SAVER2
	ST	R3, SAVER3
	LD	R2, NEWLINE
F1	LDI	R3, DSR
	BRZP	F1
	LEA	R1, PROMPT2
LOOP2	LDR	R4, R1, #0
	BRZ	INPUT2
F2	LDI	R3, DSR
	BRZP	F2
	STI	R4, DDR
	ADD	R1, R1, #1
	BR	LOOP2
INPUT2	LDI	R3, KBSR
	BRZP	INPUT2
	LDI	R4, KBDR
	ADD	R3, R4, #-10
	BRZ	F4
F3	LDI	R3, DSR
	BRZP	F3
	STI	R4, DDR
	BR	INPUT2
F4	LDI	R3, DSR
	BRZP	F4
	STI	R2, DDR
	LD	R1, SAVER1
	LD	R2, SAVER2
	LD	R3, SAVER3

START3	ST	R1, SAVER1
	ST	R2, SAVER2
	ST	R3, SAVER3
	LD	R2, NEWLINE
S1	LDI	R3, DSR
	BRZP	S1
	LEA	R1, PROMPT3
LOOP3	LDR	R7, R1, #0
	BRZ	INPUT3
S2	LDI	R3, DSR
	BRZP	S2
	STI	R7, DDR
	ADD	R1, R1, #1
	BR	LOOP3
INPUT3	LDI	R3, KBSR
	BRZP	INPUT3
	LDI	R7, KBDR
	ADD	R3, R7, #-10
	BRZ	S4
S3	LDI	R3, DSR
	BRZP	S3
	STI	R7, DDR
	BR	INPUT3
S4	LDI	R3, DSR
	BRZP	S4
	STI	R2, DDR
	LD	R1, SAVER1
	LD	R2, SAVER2
	LD	R3, SAVER3

;	*** ADDITION SECTION ***

; R4 = R0, R1 = R1, R3 = R4, R5 = R5, R6 = R6, R0 = R3

; NUMBERS ARE IN R0, R4, R7
	
ADDIT	LDI	R1, KBSR
	BRZP	ADDIT
	ADD	R1, R1, ASCII
	
	ADD	R2, R1, #0

READIN	LDI	R0, R7
	STR	R0, R4
	ADD	R4, R4, #1
	ADD	R2, R2, #-1
	BRP	READIN

;	AND	R0, R0, #0
;	LD	R6, BINARY
;	ADD	R5, R4, R6
;	ST	R5, COUNT
;REPEAT	LDR	R1, R3, #0
;	LDR	R2, R3, #10
;	ADD	R1, R1, R6	; CONVERTS TO BINARY
;	ADD	R2, R2, R6
;	ADD	R1, R1, R0
;	AND	R0, R0, #0
;	ADD	R1, R1, R2
;	BRZ	STORE0
;	ADD	R1, R1, #-1
;	BRZ	STORE1
;	ADD	R0, R0, #1
;	ADD	R1, R1, #-1
;	BR	STORE0

;STORE1	ADD	R1, R1, #1
;STORE0	LD	R6, ASCII

;	ADD	R1, R1, R6	; CONVERTS TO ASCII
;	LD	R6, BINARY	; GET SET TO CONVERT TO BINARY AGAIN
;	STR	R1, R3, #20
;	ADD	R3, R3, #-1	; NEXT DIGIT
;	ADD	R5, R5, #-1
;	BRP	REPEAT
;	LD	R5, COUNT	; RETRIEVE COUNT FROM MEMORY
;PRINT	ADD	R0, R0, #1	; FIRST DIGIT TO OUTPUT
	;LDR	R4, R0, #20
	;BRZP	PRINT
	;STI	R4, DDR

;PRINT	LDI	R4, DSR
;	BRZP	PRINT

	HALT

SAVER1	.BLKW	#1	; PROMPT'S 1-3
SAVER2	.BLKW	#1	; NEWLINE?
SAVER3	.BLKW	#1	; INPUT'S 1-3
SAVER5	.BLKW	#1
SAVER6	.BLKW	#1

DSR	.FILL	XFE04
DDR	.FILL	XFE06
KBSR	.FILL	XFE00
KBDR	.FILL	XFE02
NEWLINE	.FILL	X000A
BINARY	.FILL	X-00D0
ASCII	.FILL	X00D0
COUNT	.BLKW	#1
NUM1	.BLKW	#9
NUM2	.BLKW	#9

STOSUM	.BLKW	#10	; STORAGE FOR THE SUM

PROMPT1	.STRINGZ	"Input quantity of bit-adders: "
PROMPT2	.STRINGZ	"Input binary number of first value: "
PROMPT3	.STRINGZ	"Input binary number of second value: "
	.END

	.BYT 1